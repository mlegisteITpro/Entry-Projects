/* Cleaning Data With SQL Queries*/

Select * 
FROM [Data Cleaning Portfolio]..[Nashville Housing];

/*Standardize Date Format*/

Select SaleDateConverted  
FROM [Data Cleaning Portfolio]..[Nashville Housing];

Update [Data Cleaning Portfolio]..[Nashville Housing]
SET  = CONVERT(Date,SaleDate);

ALTER Table [Nashville Housing]
ADD SaleDateConverted Date;

Update [Data Cleaning Portfolio]..[Nashville Housing]
SET SaleDateConverted=CONVERT(Date,SaleDate);


--Populate Property Address

SELECT *
FROM [Data Cleaning Portfolio]..[Nashville Housing]
Where PropertyAddress is not null
ORDER BY ParcelID
 
 SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM [Data Cleaning Portfolio]..[Nashville Housing] a
JOIN [Data Cleaning Portfolio]..[Nashville Housing] b
  ON a.ParcelID = b.ParcelID
  AND a.[UniqueID ]<> b.[UniqueID ]
  Where a.PropertyAddress is null

Update a
SET PropertyAddress =ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM [Data Cleaning Portfolio]..[Nashville Housing] a
JOIN [Data Cleaning Portfolio]..[Nashville Housing] b
  ON a.ParcelID = b.ParcelID
  AND a.[UniqueID ]<> b.[UniqueID ]
  Where a.PropertyAddress is null

  --Breaking Address into individual columns (Address, City, State)
  --1.

  SELECT PropertyAddress
FROM [Data Cleaning Portfolio]..[Nashville Housing]
--Where PropertyAddress is not null
--ORDER BY ParcelID

SELECT
SUBSTRING(PropertyAddress,1, CHARINDEX(',', PropertyAddress) -1) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(PropertyAddress)) as Address

FROM [Data Cleaning Portfolio]..[Nashville Housing];

ALTER Table [Nashville Housing]
ADD PropertySplitAddress nvarchar(255);

Update [Data Cleaning Portfolio]..[Nashville Housing]
SET PropertySplitAddress=SUBSTRING(PropertyAddress,1, CHARINDEX(',', PropertyAddress) -1);

ALTER Table [Nashville Housing]
ADD PropertySplitCity nvarchar(255);

Update [Data Cleaning Portfolio]..[Nashville Housing]
SET PropertySplitCity=SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(PropertyAddress));

SELECT *
FROM [Data Cleaning Portfolio]..[Nashville Housing]

SELECT [OwnerAddress]
FROM [Data Cleaning Portfolio]..[Nashville Housing]


SELECT
PARSENAME(REPLACE(OwnerAddress, ',','.') , 3),
PARSENAME(REPLACE(OwnerAddress, ',','.') , 2),
PARSENAME(REPLACE(OwnerAddress, ',','.') , 1)
FROM [Data Cleaning Portfolio]..[Nashville Housing]

ALTER Table [Nashville Housing]
ADD OwnerSplitAddress nvarchar(255);

Update [Data Cleaning Portfolio]..[Nashville Housing]
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',','.') , 3)

ALTER Table [Nashville Housing]
ADD OwnerSplitCity nvarchar(255);

Update [Data Cleaning Portfolio]..[Nashville Housing]
SET OwnerSplitCity =PARSENAME(REPLACE(OwnerAddress, ',','.') , 2)

ALTER Table [Nashville Housing]
ADD OwnerSplitState nvarchar(255);

Update [Data Cleaning Portfolio]..[Nashville Housing]
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',','.') , 1)

SELECT *
FROM [Data Cleaning Portfolio]..[Nashville Housing]

-- Change Y and N to Yes and No in "Sold as Vacant" field

Select Distinct(SoldAsVacant), Count(SoldAsVacant)
FROM [Data Cleaning Portfolio]..[Nashville Housing]
GROUP BY SoldAsVacant
order by 2
--Creating a Case

Select SoldAsVacant,
case when SoldAsVacant = 'Y' THEN 'Yes'
     when SoldAsVacant = 'N' THEN 'NO'
	 Else SoldAsVacant
	 END
FROM [Data Cleaning Portfolio]..[Nashville Housing]

Update [Nashville Housing]
SET SoldAsVacant = case when SoldAsVacant = 'Y' THEN 'Yes'
     when SoldAsVacant = 'N' THEN 'NO'
	 Else SoldAsVacant
	 END
FROM [Data Cleaning Portfolio]..[Nashville Housing]

SELECT *
FROM [Data Cleaning Portfolio]..[Nashville Housing]


-- Remove Duplicates
WITH RowNUMCTE AS(
SELECT *,
  ROW_NUMBER() OVER (
  Partition by ParcelID,
               PropertyAddress,
			   SalePrice,
			   SaleDate,
			   LegalReference
			   ORDER BY
			     UniqueID
				 )row_num


FROM [Data Cleaning Portfolio]..[Nashville Housing]
--Order By ParcelID
)

Select *
FROM RowNUMCTE
where row_num > 1;
--Order by PropertyAddress

-- Removing Unused Columns 

ALTER TABLE [Data Cleaning Portfolio]..[Nashville Housing]
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate

Select *
FROM [Data Cleaning Portfolio]..[Nashville Housing]

Select LegalReference 
FROM [Data Cleaning Portfolio]..[Nashville Housing]

Select LegalReference 
FROM [Data Cleaning Portfolio]..[Nashville Housing]
Where LegalReference
